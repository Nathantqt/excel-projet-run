Option Explicit

Sub Main()


Dim wsControl As Worksheet
Dim wsEmail As Worksheet
Dim wsVolCab As Worksheet
Set wsControl = ThisWorkbook.Sheets("Control")
Set wsEmail = ThisWorkbook.Sheets("Email")
Set wsVolCab = ThisWorkbook.Sheets("vol_cab")
Dim year1 As Long
Dim year2 As Long
Dim type1 As String
Dim type2 As String
Dim type3 As String
Dim type4 As String
Dim type1_number As Long
Dim type4_number As Long
Dim type2_number As Long
Dim type3_number As Long
Dim outputRow As Variant
Dim lastRow As Long
Dim devise1 As String
Dim DebLigne As Long
Dim firstIndex As Long


type1 = wsControl.Range("A4")
type2 = wsControl.Range("A5")
type3 = wsControl.Range("A6")
type4 = wsControl.Range("A7")

type1_number = wsControl.Range("B4")
type2_number = wsControl.Range("B5")
type3_number = wsControl.Range("B6")
type4_number = wsControl.Range("B7")
year1 = wsControl.Range("B2")
year2 = wsControl.Range("B3")

devise1 = wsControl.Range("A1")
outputRow = 20
firstIndex = 20
lastRow = 302
DebLigne = 2

Call Macro1
wsEmail.Range("A2:AZ" & wsEmail.Rows.count).ClearContents
wsEmail.Range("C2:AZ" & wsEmail.Rows.count).ClearFormats

outputRow = Control_Button1_Click(firstIndex, outputRow, devise1, lastRow, DebLigne, type1, type2, type3, type4, year1, year2, type1_number, type2_number, type3_number, type4_number)
devise1 = wsControl.Range("A9")
type1 = wsControl.Range("A12")
type2 = wsControl.Range("A13")
type3 = wsControl.Range("A14")
type4 = wsControl.Range("A15")

type1_number = wsControl.Range("B12")
type2_number = wsControl.Range("B13")
type3_number = wsControl.Range("B14")
type4_number = wsControl.Range("B15")
year1 = wsControl.Range("B10")
year2 = wsControl.Range("B11")
firstIndex = outputRow
outputRow = Control_Button1_Click(firstIndex, outputRow, devise1, lastRow, DebLigne, type1, type2, type3, type4, year1, year2, type1_number, type2_number, type3_number, type4_number)

devise1 = wsControl.Range("A17")
type1 = wsControl.Range("A20")
type2 = wsControl.Range("A21")
type3 = wsControl.Range("A22")
type4 = wsControl.Range("A23")

type1_number = wsControl.Range("B20")
type2_number = wsControl.Range("B21")
type3_number = wsControl.Range("B22")
type4_number = wsControl.Range("B23")
year1 = wsControl.Range("B18")
year2 = wsControl.Range("B19")
firstIndex = outputRow
outputRow = Control_Button1_Click(firstIndex, outputRow, devise1, lastRow, DebLigne, type1, type2, type3, type4, year1, year2, type1_number, type2_number, type3_number, type4_number)

End Sub

Function Control_Button1_Click(firstIndex As Long, outputRow As Variant, devise1 As String, lastRow As Long, DebLigne As Long, type1 As String, type2 As String, type3 As String, type4 As String, year1 As Long, year2 As Long, type1_number As Long, type2_number As Long, type3_number As Long, type4_number As Long) As Variant


Dim wsControl As Worksheet
Dim wsEmail As Worksheet
Dim wsVolCab As Worksheet
Set wsControl = ThisWorkbook.Sheets("Control")
Set wsEmail = ThisWorkbook.Sheets("Email")
Set wsVolCab = ThisWorkbook.Sheets("vol_cab")


Dim CCYColumnIndex As Long
Dim VolColumnIndex As Long
Dim YearColumnIndex As Long
Dim IssuerColumnIndex As Long



Dim CCYColumn As Range
Dim IssuerColumn As Range
Dim YearColumn As Range
Dim VolColumn As Range


Set YearColumn = wsVolCab.Range("YearColumn")
YearColumnIndex = YearColumn.Column

Set CCYColumn = wsVolCab.Range("CCYColumn")
CCYColumnIndex = CCYColumn.Column

Set VolColumn = wsVolCab.Range("VolColumn")
VolColumnIndex = VolColumn.Column

Set IssuerColumn = wsVolCab.Range("IssuerColumn")
IssuerColumnIndex = IssuerColumn.Column



outputRow = SelectValues(lastRow, DebLigne, YearColumnIndex, CCYColumnIndex, VolColumnIndex, IssuerColumnIndex, type1_number, devise1, year1, year2, outputRow, type1)
outputRow = SelectValues(lastRow, DebLigne, YearColumnIndex, CCYColumnIndex, VolColumnIndex, IssuerColumnIndex, type2_number, devise1, year1, year2, outputRow, type2)
outputRow = SelectValues(lastRow, DebLigne, YearColumnIndex, CCYColumnIndex, VolColumnIndex, IssuerColumnIndex, type3_number, devise1, year1, year2, outputRow, type3)
outputRow = SelectValues(lastRow, DebLigne, YearColumnIndex, CCYColumnIndex, VolColumnIndex, IssuerColumnIndex, type4_number, devise1, year1, year2, outputRow, type4)

With wsEmail.Range(wsEmail.Cells(firstIndex, 1), wsEmail.Cells(outputRow - 1, 1))
        .Merge
        If year1 = year2 Then
        .Value = year1
        Else
        .Value = year1 & "-" & year2
        End If
        
End With
wsEmail.Rows(outputRow).Interior.Color = RGB(21, 96, 130)

Control_Button1_Click = outputRow + 1
End Function



Function SelectValues(lastRow As Long, DebLigne As Long, YearColumnIndex As Long, CCYColumnIndex As Long, VolColumnIndex As Long, IssuerColumnIndex As Long, type1_number As Long, devise1 As String, year1 As Long, year2 As Long, outputRow As Variant, type1 As String) As Long
' Initialiser des tableaux pour stocker les valeurs et leurs indices

Dim count As Long
Dim tempValue As Variant
Dim tempIndex As Long
Dim i As Long
Dim j As Long
Dim wsControl As Worksheet
Dim wsEmail As Worksheet
Dim wsVolCab As Worksheet
Set wsControl = ThisWorkbook.Sheets("Control")
Set wsEmail = ThisWorkbook.Sheets("Email")
Set wsVolCab = ThisWorkbook.Sheets("vol_cab")
Dim YearCell As Long
Dim CCYCell As String
Dim IssuerCell As String


ReDim values(1 To lastRow) As Variant
ReDim indices(1 To lastRow) As Long





count = 0
For i = DebLigne To lastRow
CCYCell = wsVolCab.Cells(i, CCYColumnIndex).Value
YearCell = wsVolCab.Cells(i, YearColumnIndex).Value
IssuerCell = wsVolCab.Cells(i, IssuerColumnIndex).Value
    If CCYCell = devise1 And YearCell >= year1 And YearCell <= year2 And IssuerCell = type1 Then
        count = count + 1
        values(count) = wsVolCab.Cells(i, VolColumnIndex).Value
        indices(count) = i ' Stocke l'index de la ligne

    End If
Next i


    
    For i = 1 To count - 1
        For j = i + 1 To count
            If values(i) < values(j) Then
                ' Échange des valeurs
                tempValue = values(i)
                values(i) = values(j)
                values(j) = tempValue

                ' Échange des indices
                tempIndex = indices(i)
                indices(i) = indices(j)
                indices(j) = tempIndex
            End If
        Next j
    Next i
    
    ' Redimensionner pour ne garder que les n plus grandes valeurs
    If type1_number < count Then
        ReDim Preserve values(1 To type1_number)
        ReDim Preserve indices(1 To type1_number)
    End If




Dim outputRowStart As Long
outputRowStart = outputRow


For i = 1 To Application.WorksheetFunction.Min(type1_number, count)
    ' Copier uniquement les colonnes F et E au lieu de la ligne entière
    wsVolCab.Rows(indices(i)).Columns("A:E").Copy Destination:=wsEmail.Cells(outputRow, 3) ' Columns("A:B") corresponds to columns F and G
    outputRow = outputRow + 1 ' Passer à la ligne suivante dans la feuille Email
Next i

    With wsEmail.Range(wsEmail.Cells(outputRowStart, 2), wsEmail.Cells(outputRow - 1, 2))
        .Merge
        .Value = type1
        
    End With

SelectValues = outputRow
    
End Function







Sub Macro1()
    '
    ' Macro1 Macro
    '
    
    '
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("Email")
    
    ws.Cells.UnMerge
    With ws.Columns("A:A")
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
    End With
    
    
    ws.Cells.UnMerge
    With ws.Columns("B:B")
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With .Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
    End With
End Sub
